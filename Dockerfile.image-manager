# Erik Image Manager Dockerfile
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libopencv-dev \
    python3-opencv \
    libjpeg-dev \
    libpng-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first (for better caching)
COPY requirements-image-manager.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-image-manager.txt

# Copy application code and templates
COPY run.py .
COPY app/ ./app/
COPY templates/ ./templates/
# Copy yard_map directory with all its files
COPY yard_map/ ./yard_map/
# Copy main application files
COPY image_manager.py .
COPY image_manager_legacy.py .
COPY hybrid_erik_tracker.py .
COPY custom_fusion_template.py .

# Create directories
RUN mkdir -p /app/erik_images /app/uploads /app/meshes

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=run.py

# Create non-root user
RUN useradd -m -u 1000 webapp && chown -R webapp:webapp /app
USER webapp

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:9000/api/status', timeout=5)" || exit 1

# Expose port 9000
EXPOSE 9000

# Run the image manager with new modular architecture
CMD ["python", "run.py", "--port", "9000"]